buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath("com.android.tools.build:gradle:7.3.1")
    }
}

apply plugin: 'com.android.library'

// For Android, we always build from source - but keep the env var for backward compatibility
def buildFromSource = true

android {
    namespace "com.novastera.llamacpprn"
    compileSdkVersion 33
    ndkVersion "23.1.7779620"
    
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"

        externalNativeBuild {
            cmake {
                arguments "-DANDROID_STL=c++_shared",
                          "-DCMAKE_BUILD_TYPE=Release",
                          "-DANDROID_PLATFORM=android-23",
                          "-DANDROID_CPP_FEATURES=rtti exceptions",
                          "-DLLAMA_BUILD_EXAMPLES=OFF",
                          "-DLLAMA_BUILD_SERVER=OFF",
                          "-DBUILD_SHARED_LIBS=ON"
                cppFlags "-std=c++17 -frtti -fexceptions -Oz -DRCT_NEW_ARCH_ENABLED=1"
            }
        }

        ndk {
            abiFilters 'arm64-v8a', 'x86_64'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }

    buildFeatures {
        prefabPublishing true
        buildConfig true
    }

    prefab {
        llamacpprn {
            headers "src/main/cpp/include"
        }
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    mavenCentral()
    google()
}

dependencies {
    implementation 'com.facebook.react:react-native:+'
    
    implementation "com.facebook.react:react-android:+"
    implementation "com.facebook.fbjni:fbjni-java-only:0.2.2"
}

// Set the build method in gradle.properties - always true for Android
def gradlePropertiesFile = rootProject.file('gradle.properties')
if (!gradlePropertiesFile.exists()) {
    gradlePropertiesFile.createNewFile()
    gradlePropertiesFile << "rnllamaBuildFromSource=true\n"
} else {
    // Read the current properties
    Properties properties = new Properties()
    gradlePropertiesFile.withInputStream { properties.load(it) }
    
    // Always build from source for Android
    properties.setProperty('rnllamaBuildFromSource', 'true')
    
    // Write back to the file
    gradlePropertiesFile.withOutputStream { 
        properties.store(it, null) 
    }
} 