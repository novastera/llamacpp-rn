apply plugin: 'com.android.library'

def safeExtGet(prop, fallback) {
  rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

android {
  namespace "com.llamacpprn"
  compileSdkVersion safeExtGet('compileSdkVersion', 33)
  
  defaultConfig {
    minSdkVersion safeExtGet('minSdkVersion', 26)
    targetSdkVersion safeExtGet('targetSdkVersion', 33)
    
    externalNativeBuild {
      cmake {
        arguments "-DANDROID_STL=c++_shared",
                  "-DCMAKE_BUILD_TYPE=Release",
                  "-DANDROID_PLATFORM=android-${safeExtGet('minSdkVersion', 26)}",
                  "-DANDROID_CPP_FEATURES=rtti exceptions",
                  "-DLLAMA_BUILD_EXAMPLES=OFF",
                  "-DLLAMA_BUILD_SERVER=OFF",
                  "-DBUILD_SHARED_LIBS=ON",
                  "-DRCT_NEW_ARCH_ENABLED=${safeExtGet('newArchEnabled', '1')}"

        cppFlags "-std=c++17 -frtti -fexceptions -DRCT_NEW_ARCH_ENABLED=1 -DLLAMA_SHARED"
      }
    }

    ndk {
      abiFilters 'arm64-v8a', 'x86_64'
    }
  }

  buildTypes {
    release {
      minifyEnabled false
    }
  }

  // This is necessary for pure C++ modules
  buildFeatures {
    prefabPublishing true
  }

  prefab {
    llamacpprn {
      headers "src/main/cpp/include"
    }
  }

  sourceSets {
    main {
      jniLibs.srcDirs = ['src/main/jniLibs']
    }
  }

  packagingOptions {
    jniLibs {
      pickFirsts += ['**/*.so']
    }
    resources {
      pickFirsts += [
        'META-INF/DEPENDENCIES',
        'META-INF/LICENSE',
        'META-INF/LICENSE.txt',
        'META-INF/NOTICE',
        'META-INF/NOTICE.txt',
        'META-INF/*.kotlin_module'
      ]
    }
  }

  externalNativeBuild {
    cmake {
      path "src/main/jni/CMakeLists.txt"
    }
  }
}

repositories {
  mavenCentral()
  google()
}

dependencies {
  implementation 'com.facebook.react:react-native:+'
  implementation 'com.facebook.fbjni:fbjni:0.7.0'
}
